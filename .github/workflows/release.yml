name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Flatpak deps
        run: |
          sudo apt-get update
          sudo apt-get install -y flatpak flatpak-builder xvfb

      - name: Install Python build tools
        run: python -m pip install --upgrade pip setuptools build
      - name: Install fpm
        run: sudo gem install --no-document fpm
      - name: Build sdist & wheel
        run: python -m build --sdist --wheel
      - name: Build .deb
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd dist
          version="${GITHUB_REF#refs/tags/}"
          version="${version#v}"
          mkdir pkgroot
          python -m pip install --prefix=/usr --root=pkgroot *.whl
          fpm -s dir -t deb \
            --name myapp \
            --version "$version" \
            -C pkgroot .
      - uses: actions/upload-artifact@v4
        with:
          name: deb
          path: dist/*.deb

      - name: Add Flathub remote
        run: flatpak --user remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
      - name: Build Flatpak
        uses: flatpak/flatpak-github-actions/flatpak-builder@v6
        with:
          manifest-path: com.example.MyApp.json
          branch: stable
          repository-url: https://dl.flathub.org/repo/flathub.flatpakrepo
      - uses: actions/upload-artifact@v4
        with:
          name: flatpak
          path: '*.flatpak'

      - name: Build AppImage
        uses: AppImageCrafters/build-appimage@v1
        with:
          recipe: appimage.yml
      - uses: actions/upload-artifact@v4
        with:
          name: appimage
          path: '*.AppImage'

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Download Debian
        uses: actions/download-artifact@v4
        with:
          name: deb
      - name: Download Flatpak
        uses: actions/download-artifact@v4
        with:
          name: flatpak
      - name: Download AppImage
        uses: actions/download-artifact@v4
        with:
          name: appimage

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          files: |
            *.deb
            *.flatpak
            *.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
